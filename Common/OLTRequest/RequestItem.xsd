<?xml version="1.0" encoding="iso-8859-1"?>
<!--Created with Liquid XML Studio Designer Edition 9.1.11.3570 (http://www.liquid-technologies.com)-->
<xs:schema elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:element name="RequestItem">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="TourOperatorCode" type="xs:string" minOccurs="0">
          <xs:annotation>
            <xs:documentation>Tour Operator Code (length=4)</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="TourOperatorCatalog" type="xs:string" minOccurs="0">
          <xs:annotation>
            <xs:documentation>Tour Operator Catalog (length=4)</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="AccountNumber" type="xs:string" minOccurs="0">
          <xs:annotation>
            <xs:documentation>Booking Number (length=12)</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="StartDate" type="xs:date">
          <xs:annotation>
            <xs:documentation>Starting date of service</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="FlexDateBeforeNr" type="xs:integer" minOccurs="0">
          <xs:annotation>
            <xs:documentation>Days before begindate for start and enddate. Allows for the specification of a date range for the StartDate and a date range for the EndDate based on the Duration. Some customers have hard coded overrides for this value.</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="FlexDateAfterNr" type="xs:integer" minOccurs="0">
          <xs:annotation>
            <xs:documentation>Days before enddate for start and enddate. Some customers have hard coded overrides for this value.</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="Duration" type="xs:integer" minOccurs="0">
          <xs:annotation>
            <xs:documentation>Duration of the service</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="Destination" type="xs:string" minOccurs="0">
          <xs:annotation>
            <xs:documentation>Destination code (length=3)</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="OnlyAvail" type="xs:boolean" minOccurs="0">
          <xs:annotation>
            <xs:documentation>true = Only allotment available products will be returned
              false or true (default: true)
            </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="Adults" type="xs:integer">
          <xs:annotation>
            <xs:documentation>Number of adults </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="Children" type="xs:integer" minOccurs="0">
          <xs:annotation>
            <xs:documentation>Number of children </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="Infants" type="xs:integer" minOccurs="0">
          <xs:annotation>
            <xs:documentation>Number of infants </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="Product" type="xs:string" minOccurs="0">
          <xs:annotation>
            <xs:documentation>ProductId (Hotel code)</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="Room" type="xs:string" minOccurs="0">
          <xs:annotation>
            <xs:documentation>Type of room</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="Meal" minOccurs="0">
          <xs:annotation>
            <xs:documentation>RO: room only
              BB: bed and breakfast
              HB: half board
              FB: full board
              AI: all inclusive
              MP: meals according to program
              If TO uses other codes
            </xs:documentation>
          </xs:annotation>
          <xs:simpleType>
            <xs:restriction base="xs:string">
              <xs:enumeration value="RO" />
              <xs:enumeration value="BB" />
              <xs:enumeration value="HB" />
              <xs:enumeration value="FB" />
              <xs:enumeration value="AI" />
              <xs:enumeration value="MP" />
            </xs:restriction>
          </xs:simpleType>
        </xs:element>
        <xs:element name="NormalRoomOccupancy" type="xs:string" minOccurs="0">
          <xs:annotation>
            <xs:documentation>Normal occupancy of a room (length=1)</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="Currency" type="xs:string" minOccurs="0">
          <xs:annotation>
            <xs:documentation>ISO Currency code eg. EUR</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="Price" type="xs:integer" minOccurs="0">
          <xs:annotation>
            <xs:documentation>Price</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="HotelCatagory" type="xs:string" minOccurs="0">
          <xs:annotation>
            <xs:documentation>Category of the Hotel (1,2,3,4,5)</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="OutboundDepartureAirport" type="xs:string" minOccurs="0">
          <xs:annotation>
            <xs:documentation>Departure airport of outbound flight (length=3), e.g. ZRH</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="OutboundArrivalAirport" type="xs:string" minOccurs="0">
          <xs:annotation>
            <xs:documentation>Arrival airport of outbound flight (length=3), e.g. LAS</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="OutboundChain" type="xs:string" minOccurs="0">
          <xs:annotation>
            <xs:documentation>Flight chain of outbound flight </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="OutboundClass" type="xs:string" minOccurs="0">
          <xs:annotation>
            <xs:documentation>Flight class of outbound flight 
'F' = First
'B' = Business
'E' = Economy
'C' = Comfort
If no class is specified flights of all classes are returned</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="OutboundCarrier" type="xs:string" minOccurs="0">
          <xs:annotation>
            <xs:documentation>Carrier code of outbound flight, e.g. LX, LH, .... Currently only one airline can be supplied as a filter criterion. If the InboundCarrier is supplied then the OutboundCarrier ought to be supplied as well, normally with the same value as the InboundCarrier.</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="OutboundFlightNumber" type="xs:integer" minOccurs="0">
          <xs:annotation>
            <xs:documentation>Flight number of outbound flight </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="InboundDepartureAirport" type="xs:string" minOccurs="0">
          <xs:annotation>
            <xs:documentation>Departure airport of inbound flight (length=3)</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="InboundArrivalAirport" type="xs:string" minOccurs="0">
          <xs:annotation>
            <xs:documentation>Arrival airport of inbound flight (length=3)</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="InboundChain" type="xs:string" minOccurs="0">
          <xs:annotation>
            <xs:documentation>Flight chain of inbound flight </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="InboundClass" type="xs:string" minOccurs="0">
          <xs:annotation>
            <xs:documentation>Flight class of inbound flight
'F' = First
'B' = Business
'E' = Economy
'C' = Comfort
If no class is specified flights of all classes are returned</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="InboundCarrier" type="xs:string" minOccurs="0">
          <xs:annotation>
            <xs:documentation>Carrier code of inbound flight, e.g. LX, LH, .... Currently only one airline can be supplied as a filter criterion. If the InboundCarrier is supplied then the OutboundCarrier ought to be supplied as well, normally with the same value as the InboundCarrier.</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="InboundFlightNumber" type="xs:integer" minOccurs="0">
          <xs:annotation>
            <xs:documentation>Flight number of inbound flight </xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="Key" use="optional">
        <xs:annotation>
          <xs:documentation> Primary Key of the Item used in Database of reciever</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="InternalItem" use="required">
        <xs:annotation>
          <xs:documentation> Internal Itemtype name:
            Flight
            Car
            Hotel
            Miscellaneous
            Bus
            Train
            Ship
            Text
            Package
          </xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Flight" />
            <xs:enumeration value="Car" />
            <xs:enumeration value="Hotel" />
            <xs:enumeration value="Miscellaneous" />
            <xs:enumeration value="Bus" />
            <xs:enumeration value="Train" />
            <xs:enumeration value="Ship" />
            <xs:enumeration value="Text" />
            <xs:enumeration value="Package" />
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
</xs:schema>
