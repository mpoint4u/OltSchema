<?xml version="1.0" encoding="utf-8" ?>
<!--Created with Liquid XML 2014 Designer Edition 12.2.5.5293 (http://www.liquid-technologies.com)-->
<xs:schema elementFormDefault="qualified"
           xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:element name="Car">
        <xs:complexType>
            <xs:all>
                <xs:element name="Company"
                            type="xs:string"
                            minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>Car rental company</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="Address1"
                            type="xs:string"
                            minOccurs="0" />
                <xs:element name="Address2"
                            type="xs:string"
                            minOccurs="0" />
                <xs:element name="Country"
                            minOccurs="0">
                    <xs:complexType>
                        <xs:simpleContent>
                            <xs:extension base="xs:string">
                                <xs:attribute name="IsoCode"
                                              type="xs:string">
                                    <xs:annotation>
                                        <xs:documentation>Two letter country code of address</xs:documentation>
                                    </xs:annotation>
                                </xs:attribute>
                            </xs:extension>
                        </xs:simpleContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="PostalCode"
                            type="xs:string"
                            minOccurs="0" />
                <xs:element name="City"
                            type="xs:string"
                            minOccurs="0" />
                <xs:element name="Region"
                            type="xs:string"
                            minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>Region of the Country
                            RE_VOLLy</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="SubRegion"
                            type="xs:string"
                            minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>Subregion of the region: SC_VOLL</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="Phone"
                            type="PhoneAttributes"
                            minOccurs="0" />
                <xs:element name="Fax"
                            type="PhoneAttributes"
                            minOccurs="0" />
                <xs:element name="Natel"
                            type="PhoneAttributes"
                            minOccurs="0" />
                <xs:element name="Mail"
                            type="xs:string"
                            minOccurs="0" />
                <xs:element name="Internet"
                            type="xs:string"
                            minOccurs="0" />
                <xs:element name="Vendor"
                            type="xs:string"
                            minOccurs="0" />
                <xs:element name="Destination"
                            type="DestinationAttributes"
                            minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>Destination code of the car company or catalog for this company. Note: this is normally not a real destination but rather an identifier, e.g. AL1 for Alamo.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="CarCode"
                            type="xs:string"
                            minOccurs="0" />
                <xs:element name="CompanyReferenz"
                            type="xs:string"
                            minOccurs="0" />
                <xs:element name="Text"
                            type="xs:string"
                            minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>CDATA</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="PriceInfo"
                            type="xs:string"
                            minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>CDATA</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="Category"
                            type="xs:string"
                            minOccurs="0" />
                <xs:element name="Type"
                            type="xs:string"
                            minOccurs="0" />
                <xs:element name="SupplierInfos"
                            type="xs:string"
                            minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>CDATA display for supplier information</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="PriceInfo"
                            type="xs:string"
                            minOccurs="0" />
                <xs:element name="Passive"
                            minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>This car can no longer be booked. If a FromDate is specified, this item cannot be booked on or after the specified date.</xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                        <xs:simpleContent>
                            <xs:extension base="xs:integer">
                                <xs:attribute name="FromDate"
                                              type="xs:date" />
                            </xs:extension>
                        </xs:simpleContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="Category"
                            type="xs:string"
                            minOccurs="0" />
                <xs:element name="CRSCode"
                            type="xs:string"
                            minOccurs="0" />
                <xs:element name="Type"
                            type="xs:string"
                            minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>CDATA</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="TourboCode"
                            type="xs:string"
                            minOccurs="0" />
                <xs:element name="Camper"
                            type="xs:boolean"
                            minOccurs="0" />
                <xs:element name="Miscellaneous"
                            type="xs:boolean"
                            minOccurs="0" />
                <xs:element name="PlanCode"
                            type="xs:string"
                            minOccurs="0" />
                <xs:element name="TourboDescription"
                            type="xs:string"
                            minOccurs="0" />
                <xs:element name="IncludedDescription"
                            type="Translation"
                            minOccurs="0" />
                <xs:element name="Supplier"
                            minOccurs="0">
                    <xs:complexType>
                        <xs:simpleContent>
                            <xs:extension base="xs:string">
                                <xs:attribute name="Code"
                                              type="xs:string">
                                    <xs:annotation>
                                        <xs:documentation>Reservation-Supplier-Code for this room
                                        </xs:documentation>
                                    </xs:annotation>
                                </xs:attribute>
                                <xs:attribute name="Nr"
                                              type="xs:nonNegativeInteger">
                                    <xs:annotation>
                                        <xs:documentation>TO Online customer nr for this supplier
                                        </xs:documentation>
                                    </xs:annotation>
                                </xs:attribute>
                            </xs:extension>
                        </xs:simpleContent>
                    </xs:complexType>
                </xs:element>
            </xs:all>
            <xs:attribute name="Key"
                          type="xs:string"
                          use="required">
                <xs:annotation>
                    <xs:documentation> Primary Key of the car </xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="Action">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:enumeration value="ADD" />
                        <xs:enumeration value="DELETE" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="System">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:enumeration value="Prod" />
                        <xs:enumeration value="Educ" />
                        <xs:enumeration value="Test" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="Type"
                          type="xs:string">
                <xs:annotation>
                    <xs:documentation>Value = Car per Default</xs:documentation>
                </xs:annotation>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="Desc">
        <xs:annotation>
            <xs:documentation />
        </xs:annotation>
        <xs:sequence>
            <xs:element name="Desc"
                        minOccurs="0"
                        maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>Every "Desc" has a DescId and the translations for this DescId. A price line has a DescId attribute which identifies which text is appropriate for the price line.
                        Placing the text in a reference list reduces the size of the XML dramatically. The XML is also built 30% faster than if the text is added to each appropriate node.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:complexContent mixed="false">
                        <xs:extension base="Translation">
                            <xs:attribute name="DescId"
                                          type="xs:integer" />
                        </xs:extension>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="Translation">
        <xs:sequence>
            <xs:element name="de"
                        type="xs:string"
                        minOccurs="0" />
            <xs:element name="en"
                        type="xs:string"
                        minOccurs="0" />
            <xs:element name="fr"
                        type="xs:string"
                        minOccurs="0" />
            <xs:element name="it"
                        type="xs:string"
                        minOccurs="0" />
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="PhoneAttributes">
        <xs:attribute name="AreaCode"
                      type="xs:string" />
        <xs:attribute name="Number"
                      type="xs:string"
                      use="required" />
        <xs:attribute name="CountryPrefix"
                      type="xs:string" />
    </xs:complexType>
    <xs:complexType name="EarlyBookingAttributes">
        <xs:attribute name="DateFrom"
                      type="xs:date"
                      use="required">
            <xs:annotation>
                <xs:documentation>Rule is valid for bookings that have a start date that is larger or equal to this date.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="DateTo"
                      type="xs:date"
                      use="required">
            <xs:annotation>
                <xs:documentation>Rule is valid for bookings that have a start date that is less than or equal to this date.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="FromDay"
                      type="xs:integer">
            <xs:annotation>
                <xs:documentation>From which day is this early booking rule relavant.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="ToDay"
                      type="xs:integer">
            <xs:annotation>
                <xs:documentation>To which day is this early booking rule relavant.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="DaysBeforeDepartureFrom"
                      type="xs:integer">
            <xs:annotation>
                <xs:documentation>Number of days before the booking date: from</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="DaysBeforeDepartureTo"
                      type="xs:integer">
            <xs:annotation>
                <xs:documentation>Number of days before the booking date: to</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="DateBeforeDepartureFrom"
                      type="xs:date">
            <xs:annotation>
                <xs:documentation>Date from when the booking can be made, for this rule to be relevant
                    Either a early booking rule has a DaysBeforeDepartureFrom and DaysBeforeDepartureTo, or it has DateBeforeDepartureFrom and DateBeforeDepartureTo. They are mutually exclusive.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="DateBeforeDepartureTo"
                      type="xs:date">
            <xs:annotation>
                <xs:documentation>Either a early booking rule has a DaysBeforeDepartureFrom and DaysBeforeDepartureTo, or it has DateBeforeDepartureFrom and DateBeforeDepartureTo. They are mutually exclusive.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="Percent"
                      type="xs:float">
            <xs:annotation>
                <xs:documentation>Percentage</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="StartDateRelevant"
                      type="xs:boolean">
            <xs:annotation>
                <xs:documentation>If the DateFrom fits into the booking period of the hotel, this special is relevant, i.e. if the start date of the booking is greater than or equal to the DateFrom.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="EndDateRelevant"
                      type="xs:boolean">
            <xs:annotation>
                <xs:documentation>If the DateTo fits into the booking period of the hotel, i.e. the last day of the booking is less than or equal to DateTo, this special is relevant</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="AddAmount"
                      type="xs:float">
            <xs:annotation>
                <xs:documentation>This amount needs to be added to the calculated early booking amount. Normally this will be a negative amount. Note: one can have a percentage as well as an AddAmount. In this case, the percentage amount is calculated, and then the AddAmount is added to the result.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="ForceDisplay"
                      type="xs:integer">
            <xs:annotation>
                <xs:documentation>determins whether to show a price with 0 amount
                    0 = do not show
                    1 = has to be shown
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="ForAllDays"
                      type="xs:integer">
            <xs:annotation>
                <xs:documentation>if ForceDisplay =1 and ForAllDays=1 then the amount has to be shown for all relevant booking days.
                    if ForceDisplay =1 and ForAllDays=0 then the amount has to be shown once.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="DescId"
                      type="xs:integer" />
        <xs:attribute name="SpecialCommission"
                      type="xs:float">
            <xs:annotation>
                <xs:documentation>percentage  if the priceline has a special commission
                    Interna: P_SPEZFLAG must be 1
                    P_</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    <xs:complexType name="EarlyBookingsChildren">
        <xs:sequence>
            <xs:element name="EarlyBooking"
                        type="EarlyBookingAttributes"
                        minOccurs="0"
                        maxOccurs="unbounded" />
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="SpecialOfferAttributes">
        <xs:attribute name="DateFrom"
                      type="xs:date"
                      use="required">
            <xs:annotation>
                <xs:documentation>Rule is valid for bookings that have a start date that is larger or equal to this date.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="DateTo"
                      type="xs:date"
                      use="required">
            <xs:annotation>
                <xs:documentation>Rule is valid for bookings that have a end date that is less than or equal to this date.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="FromDayBase"
                      type="xs:integer">
            <xs:annotation>
                <xs:documentation>From day number. with a 7/5, this would be 5</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="ToDayBase"
                      type="xs:integer">
            <xs:annotation>
                <xs:documentation>To day number. with a 7/5, this would be 7</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="DaysBeforeDepartureFrom"
                      type="xs:integer">
            <xs:annotation>
                <xs:documentation>Number of days before the booking date: from
                    Either a special offer has a DaysBeforeDepartureFrom and DaysBeforeDepartureTo, or it has DateBeforeDepartureFrom and DateBeforeDepartureTo. They are mutually exclusive.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="DaysBeforeDepartureTo"
                      type="xs:integer">
            <xs:annotation>
                <xs:documentation>Number of days before the booking date: to
                    Either a special offer has a DaysBeforeDepartureFrom and DaysBeforeDepartureTo, or it has DateBeforeDepartureFrom and DateBeforeDepartureTo. They are mutually exclusive.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="DateBeforeDepartureFrom"
                      type="xs:date">
            <xs:annotation>
                <xs:documentation>Date from when the booking can be made, for this rule to be relevant
                    Either a special offer has a DaysBeforeDepartureFrom and DaysBeforeDepartureTo, or it has DateBeforeDepartureFrom and DateBeforeDepartureTo. They are mutually exclusive.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="DateBeforeDepartureTo"
                      type="xs:date">
            <xs:annotation>
                <xs:documentation>Either a special offer has a DaysBeforeDepartureFrom and DaysBeforeDepartureTo, or it has DateBeforeDepartureFrom and DateBeforeDepartureTo. They are mutually exclusive.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="PayNights"
                      type="xs:integer">
            <xs:annotation>
                <xs:documentation>How many nights does the customer effectively pay. If this has a value of 5, and I have a FromDay=6, ToDay=7, then if I book 6 days the customer pays 5 nights, if I book 7 days the customer pays 5 nights. SaveNights and PayNights are mutaly exclusive. Only one of the attributes is allowed.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="Type">
            <xs:annotation>
                <xs:documentation>Describes which amounts for the day prices need to be used when determining the special offer amount, e.g.
                    Day1 - 100 CHF
                    Day2 - 110 CHF
                    Day3 - 120CHF
                    Day4 - 130 CHF
                    Day5  - 140 CHF
                    Day6  - 150 CHF
                    Day7  - 160 CHF
                    If the Type is EndDays, and I have a valid 7/5, then the special offer will be 150 + 160 CHF.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="EndDays" />
                    <xs:enumeration value="StartDays" />
                    <xs:enumeration value="Average" />
                    <xs:enumeration value="MinValue" />
                    <xs:enumeration value="MaxValue" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="StartDateRelevant"
                      type="xs:boolean">
            <xs:annotation>
                <xs:documentation>If the DateFrom fits into the booking period of the hotel, this special is relevant, i.e. if the start date of the booking is greater than or equal to the DateFrom.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="EndDateRelevant"
                      type="xs:boolean">
            <xs:annotation>
                <xs:documentation>If the DateTo fits into the booking period of the hotel, i.e. the last day of the booking is less than or equal to DateTo, this special is relevant</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="AddAmount"
                      type="xs:float">
            <xs:annotation>
                <xs:documentation>This amount needs to be added to the calculated SpecialOffer amount. Normally this will be a negative amount, e.g. when the special offer is calculated, but the cost for Breakfast is not included in special offer.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="DescId"
                      type="xs:integer"
                      use="required" />
        <xs:attribute name="WeekdaysValid"
                      type="xs:string">
            <xs:annotation>
                <xs:documentation>A sevent character string
                    MoTuWeThFrSaSu
                    The string 1011001 indicates
                    Mo = valid
                    Tu = invalid
                    We = valid
                    Th = valid
                    Fr = invalid
                    Sa = valid
                    Su = valid
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="LastSpOffEndDate"
                      type="xs:date">
            <xs:annotation>
                <xs:documentation>Defines the last posible booking enddate for season overlapping special offers.This date can be taken for calulating the valid special offers for a hotelbooking </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="RuleType"
                      type="xs:string">
            <xs:annotation>
                <xs:documentation>determermins how the spezial offer is to be used.
                    Always = the special offer is always valid
                    Nr = the attributes DaysBeforeDepatureFrom and DaysBeforeDepatureTo are valid for the calculation
                    Date = the attributes DateBeforeDepatureFrom and DateBeforeDepatureTo are valid for the calculation
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="DayString"
                      type="xs:string">
            <xs:annotation>
                <xs:documentation>if the special offer is a savenight (PayNights) like stay from 6 to 7 nights pay 5 and it is revolving. This string shows the sequence of the staynights.
                    ex:
                    7-6/5 Daystring = 5
                    5/5 Daystring = 5
                    6/5 Daystring = 5
                    14/10 Daystring = 7,7
                    13/10 Daystring = 7,6
                    12/10 Daystring = 6,6
                    21/15 Daystring = 7,7,7
                    20/15 Daystring = 7,7,6
                    19/15 Daystring = 7,6,6
                    18/15 Daystring = 6,6,6
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="Days"
                      type="xs:integer">
            <xs:annotation>
                <xs:documentation>this shows the minimum staynights of the booking.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="Baby"
                      type="xs:integer">
            <xs:annotation>
                <xs:documentation>0 = this special offer is valid only for adults
                    1 = this special offer is only valid for babys</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="Child"
                      type="xs:integer">
            <xs:annotation>
                <xs:documentation>0 = this special offer is valid only for adults
                    1 = this special offer is only valid for children</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="SpecialCommission"
                      type="xs:float">
            <xs:annotation>
                <xs:documentation>percentage  if he priceline has a special commission
                    Interna: P_SPEZFLAG must be 1
                    P_</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="ChildChildNr"
                      type="xs:integer">
            <xs:annotation>
                <xs:documentation>this special offer for a baby or child is valid for the n-th child or baby equal ChildChildNr
                    for ex. first baby/child or second baby/child
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="ChildAdultNr"
                      type="xs:integer">
            <xs:annotation>
                <xs:documentation>this special offer for teh baby or child is valid if it is accompanied by number of adults equal ChildAdultNr</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    <xs:complexType name="SpecialOffersChildren">
        <xs:sequence>
            <xs:element name="SpecialOffer"
                        minOccurs="0"
                        maxOccurs="unbounded">
                <xs:complexType>
                    <xs:complexContent mixed="false">
                        <xs:extension base="SpecialOfferAttributes" />
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="OneTimeAttributes">
        <xs:attribute name="DateFrom"
                      type="xs:date"
                      use="required">
            <xs:annotation>
                <xs:documentation>Date from which this price is valid</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="DateTo"
                      type="xs:date"
                      use="required">
            <xs:annotation>
                <xs:documentation>Date to which this price is valid</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="Price"
                      type="xs:float">
            <xs:annotation>
                <xs:documentation>Price</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="DescId"
                      type="xs:integer"
                      use="required">
            <xs:annotation>
                <xs:documentation>
                    In order to prevent duplication of data in the export, which would exponentially increase the size of the export file, common texts for the price lines are stored in the "Desc" node and are referenced by the DescId, e.g.
                    &lt;Descs&gt;
                    &lt;Desc DescId="1"&gt;
                    &lt;de&gt;Preis pro Person/Nacht&lt;/de&gt;
                    &lt;fr&gt;Prix par personne/nuit&lt;/fr&gt;
                    &lt;/Desc&gt;
                    ...
                    &lt;PerDayPrice Day="2013-02-01" Price="271.00" DescId="1" /&gt;</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="Type">
            <xs:annotation>
                <xs:documentation>P = Price per person (default)
                    R = Price per Room</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="P" />
                    <xs:enumeration value="R" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="StartDateRelevant"
                      type="xs:integer"
                      use="required">
            <xs:annotation>
                <xs:documentation>If the start date is relevant for pricing, then a 1 will be set here</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="EndDateRelevant"
                      type="xs:integer"
                      use="required">
            <xs:annotation>
                <xs:documentation>If the end date is relevant for pricing, then a 1 will be set here</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="WeekdaysValid"
                      type="xs:string"
                      use="required">
            <xs:annotation>
                <xs:documentation>A seven character string, e.g. 1000000
                    The above example can be interpreted, that this price is only relevant for a monday</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="AgeFrom"
                      type="xs:nonNegativeInteger">
            <xs:annotation>
                <xs:documentation>If this is an age relevant price, then it AgeFrom is the lower inclusive bound for which this price line is valid for. If AgeFrom=2 and AgeTo=12, then this price line is valid for all persons from 2 (incl.) to 11.9999 (not incl. 12).</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="AgeTo"
                      type="xs:nonNegativeInteger">
            <xs:annotation>
                <xs:documentation>If this is an age relevant price, then it AgeTo is the upper non-inclusive bound for which this price line is valid for. If AgeFrom=2 and AgeTo=12, then this price line is valid for all persons from 2 (incl.) to 11.9999 (not incl. 12).</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="Baby"
                      type="xs:nonNegativeInteger">
            <xs:annotation>
                <xs:documentation />
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="Child"
                      type="xs:nonNegativeInteger">
            <xs:annotation>
                <xs:documentation />
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="NotSpecialRelevant"
                      type="xs:nonNegativeInteger">
            <xs:annotation>
                <xs:documentation>If 1, then this price is not relevant for the calculation of specials</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="SpecialCommission"
                      type="xs:float">
            <xs:annotation>
                <xs:documentation>percentage  if the priceline has a special commission
                    Interna: P_SPEZFLAG must be 1
                    P_</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    <xs:complexType name="OneTimesChildren">
        <xs:sequence>
            <xs:element name="OneTime"
                        type="OneTimeAttributes"
                        minOccurs="0"
                        maxOccurs="unbounded" />
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="AddPerDayPriceAttributes">
        <xs:attribute name="Day"
                      type="xs:date"
                      use="required">
            <xs:annotation>
                <xs:documentation>Date for which this price is valid</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="Price"
                      type="xs:float"
                      use="required">
            <xs:annotation>
                <xs:documentation>This can be a price per person (default) or a price per day. If this is a price per day, then a Type = R is supplied as an attribute.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="Type">
            <xs:annotation>
                <xs:documentation>P = Price per person (default)
                    R = Price per Room</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="P" />
                    <xs:enumeration value="R" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="AgeFrom"
                      type="xs:nonNegativeInteger">
            <xs:annotation>
                <xs:documentation>If this is an age relevant price, then it AgeFrom is the lower inclusive bound for which this price line is valid for. If AgeFrom=2 and AgeTo=12, then this price line is valid for all persons from 2 (incl.) to 11.9999 (not incl. 12).</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="AgeTo"
                      type="xs:nonNegativeInteger">
            <xs:annotation>
                <xs:documentation>If this is an age relevant price, then it AgeTo is the upper non-inclusive bound for which this price line is valid for. If AgeFrom=2 and AgeTo=12, then this price line is valid for all persons from 2 (incl.) to 11.9999 (not incl. 12).</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="ChildIdxNr"
                      type="xs:nonNegativeInteger">
            <xs:annotation>
                <xs:documentation>If an ChildIndexNr is supplied, the price cannot be a Percentage price, but is an effective price for the additional child in the room. If this is a double room that optionally allows either two additional adults or two additional children (maximum two extra persons in room), then the following additional price lines would have to be supplied:
                    ChildIndexNr=1 (first additional child in the room)
                    ChildIndexNr=2 (second additional child in the room)
                    ChildIndexNr=0 (no additional children in room)
                    If the node ChildIndexNr is not supplied, or 0, then the price is valid for all children in the AgeFrom/AgeTo range
                    Internal: TYPE2
                    Do PriceList.$search($ref.P_KINDERPREISSPEZ=0&amp;$ref.P_PROZERMAESSIG=0,1,1,1,1)
                    Internal: Type3
                    Do PriceList.$search($ref.P_KINDERPREISSPEZ&gt;0&amp;$ref.P_PROZERMAESSIG=0,1,1,1,1)</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="DescId"
                      type="xs:integer"
                      use="required">
            <xs:annotation>
                <xs:documentation>
                    In order to prevent duplication of data in the export, which would exponentially increase the size of the export file, common texts for the price lines are stored in the "Desc" node and are referenced by the DescId, e.g.
                    &lt;Descs&gt;
                    &lt;Desc DescId="1"&gt;
                    &lt;de&gt;Preis pro Person/Nacht&lt;/de&gt;
                    &lt;fr&gt;Prix par personne/nuit&lt;/fr&gt;
                    &lt;/Desc&gt;
                    ...
                    &lt;PerDayPrice Day="2013-02-01" Price="271.00" DescId="1" /&gt;</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="NotSpecialRelevant"
                      type="xs:integer">
            <xs:annotation>
                <xs:documentation>Some price lines must be ignored when calculating a special.
                    1 = NotSpecialRelevant</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="SpecialCommission"
                      type="xs:float">
            <xs:annotation>
                <xs:documentation>percentage  if he priceline has a special commission
                    Interna: P_SPEZFLAG must be 1
                    P_</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    <xs:complexType name="AddPerDayPricesChildren">
        <xs:sequence>
            <xs:element name="AddPerDayPrice"
                        type="AddPerDayPriceAttributes"
                        minOccurs="0"
                        maxOccurs="unbounded" />
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="PerDayPriceAttributes">
        <xs:attribute name="Day"
                      type="xs:date"
                      use="required">
            <xs:annotation>
                <xs:documentation>Date for which this price is valid</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="Price"
                      type="xs:float"
                      use="required">
            <xs:annotation>
                <xs:documentation>This can be a price per person (default) or a price per day. If this is a price per day, then a Type = R is supplied as an attribute.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="Type">
            <xs:annotation>
                <xs:documentation>P = Price per person (default)
                    R = Price per Room</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="P" />
                    <xs:enumeration value="R" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="AgeFrom"
                      type="xs:nonNegativeInteger">
            <xs:annotation>
                <xs:documentation>If this is an age relevant price, then it AgeFrom is the lower inclusive bound for which this price line is valid for. If AgeFrom=2 and AgeTo=12, then this price line is valid for all persons from 2 (incl.) to 11.9999 (not incl. 12).</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="AgeTo"
                      type="xs:nonNegativeInteger">
            <xs:annotation>
                <xs:documentation>If this is an age relevant price, then it AgeTo is the upper non-inclusive bound for which this price line is valid for. If AgeFrom=2 and AgeTo=12, then this price line is valid for all persons from 2 (incl.) to 11.9999 (not incl. 12).</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="ChildIdxNr"
                      type="xs:nonNegativeInteger">
            <xs:annotation>
                <xs:documentation>If an ChildIndexNr is supplied, the price cannot be a Percentage price, but is an effective price for the additional child in the room. If this is a double room that optionally allows either two additional adults or two additional children (maximum two extra persons in room), then the following additional price lines would have to be supplied:
                    ChildIndexNr=1 (first additional child in the room)
                    ChildIndexNr=2 (second additional child in the room)
                    ChildIndexNr=0 (no additional children in room)
                    If the node ChildIndexNr is not supplied, or 0, then the price is valid for all children in the AgeFrom/AgeTo range
                    Internal: TYPE2
                    Do PriceList.$search($ref.P_KINDERPREISSPEZ=0&amp;$ref.P_PROZERMAESSIG=0,1,1,1,1)
                    Internal: Type3
                    Do PriceList.$search($ref.P_KINDERPREISSPEZ&gt;0&amp;$ref.P_PROZERMAESSIG=0,1,1,1,1)</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="DescId"
                      type="xs:integer"
                      use="required">
            <xs:annotation>
                <xs:documentation>
                    In order to prevent duplication of data in the export, which would exponentially increase the size of the export file, common texts for the price lines are stored in the "Desc" node and are referenced by the DescId, e.g.
                    &lt;Descs&gt;
                    &lt;Desc DescId="1"&gt;
                    &lt;de&gt;Preis pro Person/Nacht&lt;/de&gt;
                    &lt;fr&gt;Prix par personne/nuit&lt;/fr&gt;
                    &lt;/Desc&gt;
                    ...
                    &lt;PerDayPrice Day="2013-02-01" Price="271.00" DescId="1" /&gt;</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="NotSpecialRelevant"
                      type="xs:integer">
            <xs:annotation>
                <xs:documentation>Some price lines must be ignored when calculating a special.
                    1 = NotSpecialRelevant</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="SpecialCommission"
                      type="xs:float">
            <xs:annotation>
                <xs:documentation>percentage  if he priceline has a special commission
                    Interna: P_SPEZFLAG must be 1
                    P_</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    <xs:complexType name="PerDayPricesChildren">
        <xs:sequence>
            <xs:element name="PerDayPrice"
                        minOccurs="0"
                        maxOccurs="unbounded">
                <xs:complexType>
                    <xs:complexContent mixed="false">
                        <xs:extension base="PerDayPriceAttributes" />
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="DestinationAttributes">
        <xs:attribute name="CountryCode"
                      type="xs:string"
                      use="required">
            <xs:annotation>
                <xs:documentation>2-letter country code based on the destination</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="Code"
                      type="xs:string"
                      use="required">
            <xs:annotation>
                <xs:documentation>IATA Code of the destination
                    HO_DESTINATION</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
</xs:schema>
